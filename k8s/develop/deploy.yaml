apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookstore-svc
  labels:
    app: bookstore-svc
    demo: interswitch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstore-svc
  template:
    metadata:
      labels:
        app: bookstore-svc
    spec:
      containers:
      - name: bookstore-svc
        image: solexb/bookstore-svc:demo-01-20240611-1530-d111e9c
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: bookstore-svc
  labels: 
    app: bookstore-svc
spec:
  selector:
    # app.kubernetes.io/name: bookstore-svc
    app: bookstore-svc
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server
#   namespace: argocd
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   ingressClassName: nginx
#   rules:
#   - http:
#       paths:
#       - path: /argocd
#         pathType: Prefix
#         backend:
#           service:
#             name: argocd-server
#             port:
#               number: 443

---
# An example Ingress that makes use of the controller:
#   apiVersion: networking.k8s.io/v1
#   kind: Ingress
#   metadata:
#     name: example
#     namespace: foo
#   spec:
#     ingressClassName: nginx
#     rules:
#       - host: www.example.com
#         http:
#           paths:
#             - pathType: Prefix
#               backend:
#                 service:
#                   name: exampleService
#                   port:
#                     number: 80
#               path: /
#     # This section is only required if TLS is to be enabled for the Ingress
#     tls:
#       - hosts:
#         - www.example.com
#         secretName: example-tls

# If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

#   apiVersion: v1
#   kind: Secret
#   metadata:
#     name: example-tls
#     namespace: foo
#   data:
#     tls.crt: <base64 encoded cert>
#     tls.key: <base64 encoded key>
#   type: kubernetes.io/tls